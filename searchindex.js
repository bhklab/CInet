Search.setIndex({"alltitles": {"00_simple_train_test": [[0, "module-00_simple_train_test"]], "01_hparam_tuning": [[1, "module-01_hparam_tuning"]], "02_results_after_tuning": [[2, "module-02_results_after_tuning"]], "03_compare": [[3, "module-03_compare"]], "API Reference": [[9, "api-reference"]], "Attributes": [[4, "attributes"]], "Attribution": [[12, "attribution"]], "Changelog": [[11, "changelog"]], "Classes": [[4, "classes"], [5, "classes"], [6, "classes"]], "Code of Conduct": [[12, "code-of-conduct"], [13, "code-of-conduct"]], "Contributing": [[13, "contributing"], [15, "contributing"]], "Credits": [[15, "credits"]], "Data curation process": [[15, "data-curation-process"]], "Data sources": [[15, "data-sources"]], "Enforcement": [[12, "enforcement"]], "Example usage": [[14, "example-usage"]], "Fix Bugs": [[13, "fix-bugs"]], "Functions": [[5, "functions"], [7, "functions"], [8, "functions"], [10, "functions"]], "Get Started!": [[13, "get-started"]], "Implement Features": [[13, "implement-features"]], "Installation": [[15, "installation"]], "License": [[15, "license"]], "Module Contents": [[0, "module-contents"], [1, "module-contents"], [2, "module-contents"], [3, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [10, "module-contents"]], "Our Pledge": [[12, "our-pledge"]], "Our Responsibilities": [[12, "our-responsibilities"]], "Our Standards": [[12, "our-standards"]], "Package Contents": [[4, "package-contents"]], "Pull Request Guidelines": [[13, "pull-request-guidelines"]], "Report Bugs": [[13, "report-bugs"]], "Scope": [[12, "scope"]], "Submit Feedback": [[13, "submit-feedback"]], "Submodules": [[4, "submodules"]], "Types of Contributions": [[13, "types-of-contributions"]], "Usage": [[15, "usage"]], "Write Documentation": [[13, "write-documentation"]], "cinet": [[4, "module-cinet"], [15, "cinet"]], "cinet.interfaces": [[5, "module-cinet.interfaces"]], "cinet.models": [[6, "module-cinet.models"]], "data_managing": [[7, "module-data_managing"]], "experiments": [[8, "module-experiments"]], "v0.0.1 (2022-08-24)": [[11, "v0-0-1-2022-08-24"]], "v0.0.10 (2022-08-25)": [[11, "v0-0-10-2022-08-25"]], "v0.0.11 (2022-08-25)": [[11, "v0-0-11-2022-08-25"]], "v0.0.12 (2022-08-25)": [[11, "v0-0-12-2022-08-25"]], "v0.0.13 (2022-08-26)": [[11, "v0-0-13-2022-08-26"]], "v0.0.14 (2022-08-26)": [[11, "v0-0-14-2022-08-26"]], "v0.0.15 (2022-08-26)": [[11, "v0-0-15-2022-08-26"]], "v0.0.16 (2022-11-12)": [[11, "v0-0-16-2022-11-12"]], "v0.0.2 (2022-08-24)": [[11, "v0-0-2-2022-08-24"]], "v0.0.3 (2022-08-24)": [[11, "v0-0-3-2022-08-24"]], "v0.0.4 (2022-08-24)": [[11, "v0-0-4-2022-08-24"]], "v0.0.5 (2022-08-25)": [[11, "v0-0-5-2022-08-25"]], "v0.0.6 (2022-08-25)": [[11, "v0-0-6-2022-08-25"]], "v0.0.7 (2022-08-25)": [[11, "v0-0-7-2022-08-25"]], "v0.0.8 (2022-08-25)": [[11, "v0-0-8-2022-08-25"]], "v0.0.9 (2022-08-25)": [[11, "v0-0-9-2022-08-25"]], "v0.1.0 (24/06/2022)": [[11, "v0-1-0-24-06-2022"]], "visualization": [[10, "module-visualization"]]}, "docnames": ["autoapi/00_simple_train_test/index", "autoapi/01_hparam_tuning/index", "autoapi/02_results_after_tuning/index", "autoapi/03_compare/index", "autoapi/cinet/index", "autoapi/cinet/interfaces/index", "autoapi/cinet/models/index", "autoapi/data_managing/index", "autoapi/experiments/index", "autoapi/index", "autoapi/visualization/index", "changelog", "conduct", "contributing", "example", "index"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["autoapi/00_simple_train_test/index.rst", "autoapi/01_hparam_tuning/index.rst", "autoapi/02_results_after_tuning/index.rst", "autoapi/03_compare/index.rst", "autoapi/cinet/index.rst", "autoapi/cinet/interfaces/index.rst", "autoapi/cinet/models/index.rst", "autoapi/data_managing/index.rst", "autoapi/experiments/index.rst", "autoapi/index.rst", "autoapi/visualization/index.rst", "changelog.md", "conduct.md", "contributing.md", "example.ipynb", "index.md"], "indexentries": {"00_simple_train_test": [[0, "module-00_simple_train_test", false]], "01_hparam_tuning": [[1, "module-01_hparam_tuning", false]], "02_results_after_tuning": [[2, "module-02_results_after_tuning", false]], "03_compare": [[3, "module-03_compare", false]], "__getitem__() (cinet.models.dataset method)": [[6, "cinet.models.Dataset.__getitem__", false]], "__len__() (cinet.models.dataset method)": [[6, "cinet.models.Dataset.__len__", false]], "__version__ (in module cinet)": [[4, "cinet.__version__", false]], "_build_pairs() (cinet.models.dataset method)": [[6, "cinet.models.Dataset._build_pairs", false]], "_load_item() (cinet.models.dataset method)": [[6, "cinet.models.Dataset._load_item", false]], "_load_response() (cinet.models.dataset method)": [[6, "cinet.models.Dataset._load_response", false]], "_validate_params() (cinet.deepcinet method)": [[4, "cinet.deepCINET._validate_params", false]], "_validate_params() (cinet.interfaces.basecinet method)": [[5, "cinet.interfaces.BaseCINET._validate_params", false]], "_validate_params() (cinet.interfaces.deepcinet method)": [[5, "cinet.interfaces.deepCINET._validate_params", false]], "aac_noise_plots() (in module visualization)": [[10, "visualization.aac_noise_plots", false]], "abstractattr() (in module cinet.interfaces)": [[5, "cinet.interfaces.abstractattr", false]], "add_argument_group() (cinet.interfaces.basecinet method)": [[5, "cinet.interfaces.BaseCINET.add_argument_group", false]], "add_ctrp_genes() (in module data_managing)": [[7, "data_managing.add_ctrp_genes", false]], "all_distributions_subplotnine() (in module visualization)": [[10, "visualization.all_distributions_subplotnine", false]], "all_distributions_subseaborn() (in module visualization)": [[10, "visualization.all_distributions_subseaborn", false]], "arch_heatmap() (in module visualization)": [[10, "visualization.arch_heatmap", false]], "arch_plots() (in module visualization)": [[10, "visualization.arch_plots", false]], "architecture_exploration() (in module experiments)": [[8, "experiments.architecture_exploration", false]], "assess_dataset() (in module data_managing)": [[7, "data_managing.assess_dataset", false]], "basecinet (class in cinet.interfaces)": [[5, "cinet.interfaces.BaseCINET", false]], "check_datasets() (in module visualization)": [[10, "visualization.check_datasets", false]], "cinet": [[4, "module-cinet", false]], "cinet.interfaces": [[5, "module-cinet.interfaces", false]], "cinet.models": [[6, "module-cinet.models", false]], "classify_target() (cinet.interfaces.basecinet method)": [[5, "cinet.interfaces.BaseCINET.classify_target", false]], "classify_target() (in module experiments)": [[8, "experiments.classify_target", false]], "clinical_filter_genes() (in module data_managing)": [[7, "data_managing.clinical_filter_genes", false]], "clinical_filter_patients() (in module data_managing)": [[7, "data_managing.clinical_filter_patients", false]], "configure_optimizers() (cinet.models.deepcinet method)": [[6, "cinet.models.DeepCINET.configure_optimizers", false]], "correlation_exploration() (in module experiments)": [[8, "experiments.correlation_exploration", false]], "correlation_plots() (in module visualization)": [[10, "visualization.correlation_plots", false]], "count_parameters() (cinet.models.deepcinet static method)": [[6, "cinet.models.DeepCINET.count_parameters", false]], "cross_val_mrmr() (in module experiments)": [[8, "experiments.cross_val_mrmr", false]], "cross_validation_plot() (in module experiments)": [[8, "experiments.cross_validation_plot", false]], "data (in module 01_hparam_tuning)": [[1, "hparam_tuning.data", false]], "data (in module 02_results_after_tuning)": [[2, "results_after_tuning.data", false]], "data_managing": [[7, "module-data_managing", false]], "dataset (class in cinet.models)": [[6, "cinet.models.Dataset", false]], "datatype (in module 01_hparam_tuning)": [[1, "hparam_tuning.dataType", false]], "deepcinet (class in cinet)": [[4, "cinet.deepCINET", false]], "deepcinet (class in cinet.interfaces)": [[5, "cinet.interfaces.deepCINET", false]], "deepcinet (class in cinet.models)": [[6, "cinet.models.DeepCINET", false]], "deepcinet_hparam_tuned (in module 02_results_after_tuning)": [[2, "results_after_tuning.deepCINET_hparam_tuned", false]], "drug (in module 02_results_after_tuning)": [[2, "results_after_tuning.drug", false]], "ecinet (class in cinet)": [[4, "cinet.ECINET", false]], "ecinet (class in cinet.interfaces)": [[5, "cinet.interfaces.ECINET", false]], "ecinet_hparam_tuned (in module 02_results_after_tuning)": [[2, "results_after_tuning.ECINET_hparam_tuned", false]], "experiments": [[8, "module-experiments", false]], "extract_cancer_gene_census() (in module data_managing)": [[7, "data_managing.extract_cancer_gene_census", false]], "file (in module 00_simple_train_test)": [[0, "simple_train_test.file", false]], "file (in module 03_compare)": [[3, "compare.file", false]], "file_dir (in module 00_simple_train_test)": [[0, "simple_train_test.file_dir", false]], "file_dir (in module 01_hparam_tuning)": [[1, "hparam_tuning.file_dir", false]], "file_dir (in module 03_compare)": [[3, "compare.file_dir", false]], "file_list (in module 00_simple_train_test)": [[0, "simple_train_test.file_list", false]], "file_list (in module 01_hparam_tuning)": [[1, "hparam_tuning.file_list", false]], "file_list (in module 03_compare)": [[3, "compare.file_list", false]], "find_common_cells() (in module data_managing)": [[7, "data_managing.find_common_cells", false]], "find_common_drugs() (in module data_managing)": [[7, "data_managing.find_common_drugs", false]], "find_common_genes() (in module data_managing)": [[7, "data_managing.find_common_genes", false]], "fit() (cinet.interfaces.basecinet method)": [[5, "cinet.interfaces.BaseCINET.fit", false]], "fix_genes_files() (in module data_managing)": [[7, "data_managing.fix_genes_files", false]], "forward() (cinet.models.deepcinet method)": [[6, "cinet.models.DeepCINET.forward", false]], "forward() (cinet.models.fullyconnected method)": [[6, "cinet.models.FullyConnected.forward", false]], "forward() (cinet.models.fullyconnectedlinear method)": [[6, "cinet.models.FullyConnectedLinear.forward", false]], "fullyconnected (class in cinet.models)": [[6, "cinet.models.FullyConnected", false]], "fullyconnectedlinear (class in cinet.models)": [[6, "cinet.models.FullyConnectedLinear", false]], "gcsi_gdsc_tests() (in module experiments)": [[8, "experiments.gcsi_gdsc_tests", false]], "gene_num() (cinet.models.dataset method)": [[6, "cinet.models.Dataset.gene_num", false]], "generate_cancer_gene_census_files() (in module data_managing)": [[7, "data_managing.generate_cancer_gene_census_files", false]], "generate_ctrp_files() (in module data_managing)": [[7, "data_managing.generate_ctrp_files", false]], "get_concordant_pair_list() (cinet.models.dataset method)": [[6, "cinet.models.Dataset.get_concordant_pair_list", false]], "get_dataloaders() (cinet.interfaces.basecinet method)": [[5, "cinet.interfaces.BaseCINET.get_dataloaders", false]], "get_model() (cinet.deepcinet method)": [[4, "cinet.deepCINET.get_model", false]], "get_model() (cinet.ecinet method)": [[4, "cinet.ECINET.get_model", false]], "get_model() (cinet.interfaces.basecinet method)": [[5, "cinet.interfaces.BaseCINET.get_model", false]], "get_model() (cinet.interfaces.deepcinet method)": [[5, "cinet.interfaces.deepCINET.get_model", false]], "get_model() (cinet.interfaces.ecinet method)": [[5, "cinet.interfaces.ECINET.get_model", false]], "get_relationship_from_index() (cinet.models.dataset method)": [[6, "cinet.models.Dataset.get_relationship_from_index", false]], "get_trainer() (cinet.interfaces.basecinet method)": [[5, "cinet.interfaces.BaseCINET.get_trainer", false]], "getconfig() (cinet.deepcinet method)": [[4, "cinet.deepCINET.getConfig", false]], "getconfig() (cinet.ecinet method)": [[4, "cinet.ECINET.getConfig", false]], "getconfig() (cinet.interfaces.basecinet method)": [[5, "cinet.interfaces.BaseCINET.getConfig", false]], "getconfig() (cinet.interfaces.deepcinet method)": [[5, "cinet.interfaces.deepCINET.getConfig", false]], "getconfig() (cinet.interfaces.ecinet method)": [[5, "cinet.interfaces.ECINET.getConfig", false]], "getpytorchmodel() (cinet.interfaces.basecinet method)": [[5, "cinet.interfaces.BaseCINET.getPytorchModel", false]], "hyperparameter_exploration() (in module experiments)": [[8, "experiments.hyperparameter_exploration", false]], "learn_exp_plots() (in module visualization)": [[10, "visualization.learn_exp_plots", false]], "learn_experiment() (in module experiments)": [[8, "experiments.learn_experiment", false]], "less_genes_exp() (in module experiments)": [[8, "experiments.less_genes_exp", false]], "less_genes_heatmap() (in module visualization)": [[10, "visualization.less_genes_heatmap", false]], "log_model_parameters() (cinet.models.deepcinet method)": [[6, "cinet.models.DeepCINET.log_model_parameters", false]], "mass_train() (in module experiments)": [[8, "experiments.mass_train", false]], "method_validation() (in module experiments)": [[8, "experiments.method_validation", false]], "method_validation_plots() (in module visualization)": [[10, "visualization.method_validation_plots", false]], "model (in module 00_simple_train_test)": [[0, "simple_train_test.model", false]], "model_inference() (in module experiments)": [[8, "experiments.model_inference", false]], "model_inference_plots() (in module visualization)": [[10, "visualization.model_inference_plots", false]], "modeldc (in module 03_compare)": [[3, "compare.modelDC", false]], "modelec (in module 03_compare)": [[3, "compare.modelEC", false]], "modelen (in module 03_compare)": [[3, "compare.modelEN", false]], "modelln (in module 03_compare)": [[3, "compare.modelLN", false]], "module": [[0, "module-00_simple_train_test", false], [1, "module-01_hparam_tuning", false], [2, "module-02_results_after_tuning", false], [3, "module-03_compare", false], [4, "module-cinet", false], [5, "module-cinet.interfaces", false], [6, "module-cinet.models", false], [7, "module-data_managing", false], [8, "module-experiments", false], [10, "module-visualization", false]], "mrmr_experiment() (in module experiments)": [[8, "experiments.mrmr_experiment", false]], "mrmr_plots() (in module visualization)": [[10, "visualization.mrmr_plots", false]], "name (in module 01_hparam_tuning)": [[1, "hparam_tuning.name", false]], "obtain_ctrp_drugs() (in module data_managing)": [[7, "data_managing.obtain_ctrp_drugs", false]], "obtain_distr() (in module visualization)": [[10, "visualization.obtain_distr", false]], "overfit_exp() (in module experiments)": [[8, "experiments.overfit_exp", false]], "param_grid (in module 01_hparam_tuning)": [[1, "hparam_tuning.param_grid", false]], "plot_ci_delta() (in module experiments)": [[8, "experiments.plot_ci_delta", false]], "plot_distribution() (in module visualization)": [[10, "visualization.plot_distribution", false]], "plotnine_distribution() (in module visualization)": [[10, "visualization.plotnine_distribution", false]], "predict() (cinet.interfaces.basecinet method)": [[5, "cinet.interfaces.BaseCINET.predict", false]], "save_dir (in module 01_hparam_tuning)": [[1, "hparam_tuning.save_dir", false]], "score() (cinet.interfaces.basecinet method)": [[5, "cinet.interfaces.BaseCINET.score", false]], "seaborn_distribution() (in module visualization)": [[10, "visualization.seaborn_distribution", false]], "show_all_distributions() (in module visualization)": [[10, "visualization.show_all_distributions", false]], "sort_cell_lines_datasets() (in module data_managing)": [[7, "data_managing.sort_cell_lines_datasets", false]], "test_ci() (in module experiments)": [[8, "experiments.test_ci", false]], "test_clinical() (in module experiments)": [[8, "experiments.test_clinical", false]], "test_df (in module 00_simple_train_test)": [[0, "simple_train_test.test_df", false]], "test_df (in module 03_compare)": [[3, "compare.test_df", false]], "test_df_x (in module 03_compare)": [[3, "compare.test_df_X", false], [3, "id1", false]], "test_df_y (in module 03_compare)": [[3, "compare.test_df_Y", false]], "test_directories (in module 02_results_after_tuning)": [[2, "results_after_tuning.test_directories", false]], "test_epoch_end() (cinet.models.deepcinet method)": [[6, "cinet.models.DeepCINET.test_epoch_end", false]], "test_file (in module 00_simple_train_test)": [[0, "simple_train_test.test_file", false]], "test_file (in module 03_compare)": [[3, "compare.test_file", false]], "test_gcsi() (in module experiments)": [[8, "experiments.test_gcsi", false]], "test_gdsc() (in module experiments)": [[8, "experiments.test_gdsc", false]], "test_item() (cinet.models.dataset method)": [[6, "cinet.models.Dataset.test_item", false]], "test_step() (cinet.models.deepcinet method)": [[6, "cinet.models.DeepCINET.test_step", false]], "train() (in module experiments)": [[8, "experiments.train", false]], "train_df (in module 00_simple_train_test)": [[0, "simple_train_test.train_df", false]], "train_df (in module 03_compare)": [[3, "compare.train_df", false]], "train_dir (in module 02_results_after_tuning)": [[2, "results_after_tuning.train_dir", false]], "train_item() (cinet.models.dataset method)": [[6, "cinet.models.Dataset.train_item", false]], "train_test_split_plot() (in module experiments)": [[8, "experiments.train_test_split_plot", false]], "training_epoch_end() (cinet.models.deepcinet method)": [[6, "cinet.models.DeepCINET.training_epoch_end", false]], "training_step() (cinet.models.deepcinet method)": [[6, "cinet.models.DeepCINET.training_step", false]], "validation_epoch_end() (cinet.models.deepcinet method)": [[6, "cinet.models.DeepCINET.validation_epoch_end", false]], "validation_step() (cinet.models.deepcinet method)": [[6, "cinet.models.DeepCINET.validation_step", false]], "visualization": [[10, "module-visualization", false]], "x (in module 00_simple_train_test)": [[0, "simple_train_test.X", false]], "x (in module 03_compare)": [[3, "compare.X", false], [3, "id0", false]], "y (in module 00_simple_train_test)": [[0, "simple_train_test.y", false]], "y (in module 03_compare)": [[3, "compare.y", false]]}, "objects": {"": [[0, 0, 0, "-", "00_simple_train_test"], [1, 0, 0, "-", "01_hparam_tuning"], [2, 0, 0, "-", "02_results_after_tuning"], [3, 0, 0, "-", "03_compare"], [4, 0, 0, "-", "cinet"], [7, 0, 0, "-", "data_managing"], [8, 0, 0, "-", "experiments"], [10, 0, 0, "-", "visualization"]], "00_simple_train_test": [[0, 1, 1, "simple_train_test.X", "X"], [0, 1, 1, "simple_train_test.file", "file"], [0, 1, 1, "simple_train_test.file_dir", "file_dir"], [0, 1, 1, "simple_train_test.file_list", "file_list"], [0, 1, 1, "simple_train_test.model", "model"], [0, 1, 1, "simple_train_test.test_df", "test_df"], [0, 1, 1, "simple_train_test.test_file", "test_file"], [0, 1, 1, "simple_train_test.train_df", "train_df"], [0, 1, 1, "simple_train_test.y", "y"]], "01_hparam_tuning": [[1, 1, 1, "hparam_tuning.data", "data"], [1, 1, 1, "hparam_tuning.dataType", "dataType"], [1, 1, 1, "hparam_tuning.file_dir", "file_dir"], [1, 1, 1, "hparam_tuning.file_list", "file_list"], [1, 1, 1, "hparam_tuning.name", "name"], [1, 1, 1, "hparam_tuning.param_grid", "param_grid"], [1, 1, 1, "hparam_tuning.save_dir", "save_dir"]], "02_results_after_tuning": [[2, 1, 1, "results_after_tuning.ECINET_hparam_tuned", "ECINET_hparam_tuned"], [2, 1, 1, "results_after_tuning.data", "data"], [2, 1, 1, "results_after_tuning.deepCINET_hparam_tuned", "deepCINET_hparam_tuned"], [2, 1, 1, "results_after_tuning.drug", "drug"], [2, 1, 1, "results_after_tuning.test_directories", "test_directories"], [2, 1, 1, "results_after_tuning.train_dir", "train_dir"]], "03_compare": [[3, 1, 1, "id0", "X"], [3, 1, 1, "compare.file", "file"], [3, 1, 1, "compare.file_dir", "file_dir"], [3, 1, 1, "compare.file_list", "file_list"], [3, 1, 1, "compare.modelDC", "modelDC"], [3, 1, 1, "compare.modelEC", "modelEC"], [3, 1, 1, "compare.modelEN", "modelEN"], [3, 1, 1, "compare.modelLN", "modelLN"], [3, 1, 1, "compare.test_df", "test_df"], [3, 1, 1, "id1", "test_df_X"], [3, 1, 1, "compare.test_df_Y", "test_df_Y"], [3, 1, 1, "compare.test_file", "test_file"], [3, 1, 1, "compare.train_df", "train_df"], [3, 1, 1, "compare.y", "y"]], "cinet": [[4, 2, 1, "", "ECINET"], [4, 1, 1, "", "__version__"], [4, 2, 1, "", "deepCINET"], [5, 0, 0, "-", "interfaces"], [6, 0, 0, "-", "models"]], "cinet.ECINET": [[4, 3, 1, "", "getConfig"], [4, 3, 1, "", "get_model"]], "cinet.deepCINET": [[4, 3, 1, "", "_validate_params"], [4, 3, 1, "", "getConfig"], [4, 3, 1, "", "get_model"]], "cinet.interfaces": [[5, 2, 1, "", "BaseCINET"], [5, 2, 1, "", "ECINET"], [5, 4, 1, "", "abstractattr"], [5, 2, 1, "", "deepCINET"]], "cinet.interfaces.BaseCINET": [[5, 3, 1, "", "_validate_params"], [5, 3, 1, "", "add_argument_group"], [5, 3, 1, "", "classify_target"], [5, 3, 1, "", "fit"], [5, 3, 1, "", "getConfig"], [5, 3, 1, "", "getPytorchModel"], [5, 3, 1, "", "get_dataloaders"], [5, 3, 1, "", "get_model"], [5, 3, 1, "", "get_trainer"], [5, 3, 1, "", "predict"], [5, 3, 1, "", "score"]], "cinet.interfaces.ECINET": [[5, 3, 1, "", "getConfig"], [5, 3, 1, "", "get_model"]], "cinet.interfaces.deepCINET": [[5, 3, 1, "", "_validate_params"], [5, 3, 1, "", "getConfig"], [5, 3, 1, "", "get_model"]], "cinet.models": [[6, 2, 1, "", "Dataset"], [6, 2, 1, "", "DeepCINET"], [6, 2, 1, "", "FullyConnected"], [6, 2, 1, "", "FullyConnectedLinear"]], "cinet.models.Dataset": [[6, 3, 1, "", "__getitem__"], [6, 3, 1, "", "__len__"], [6, 3, 1, "", "_build_pairs"], [6, 3, 1, "", "_load_item"], [6, 3, 1, "", "_load_response"], [6, 3, 1, "", "gene_num"], [6, 3, 1, "", "get_concordant_pair_list"], [6, 3, 1, "", "get_relationship_from_index"], [6, 3, 1, "", "test_item"], [6, 3, 1, "", "train_item"]], "cinet.models.DeepCINET": [[6, 3, 1, "", "configure_optimizers"], [6, 3, 1, "", "count_parameters"], [6, 3, 1, "", "forward"], [6, 3, 1, "", "log_model_parameters"], [6, 3, 1, "", "test_epoch_end"], [6, 3, 1, "", "test_step"], [6, 3, 1, "", "training_epoch_end"], [6, 3, 1, "", "training_step"], [6, 3, 1, "", "validation_epoch_end"], [6, 3, 1, "", "validation_step"]], "cinet.models.FullyConnected": [[6, 3, 1, "", "forward"]], "cinet.models.FullyConnectedLinear": [[6, 3, 1, "", "forward"]], "data_managing": [[7, 4, 1, "", "add_ctrp_genes"], [7, 4, 1, "", "assess_dataset"], [7, 4, 1, "", "clinical_filter_genes"], [7, 4, 1, "", "clinical_filter_patients"], [7, 4, 1, "", "extract_cancer_gene_census"], [7, 4, 1, "", "find_common_cells"], [7, 4, 1, "", "find_common_drugs"], [7, 4, 1, "", "find_common_genes"], [7, 4, 1, "", "fix_genes_files"], [7, 4, 1, "", "generate_cancer_gene_census_files"], [7, 4, 1, "", "generate_ctrp_files"], [7, 4, 1, "", "obtain_ctrp_drugs"], [7, 4, 1, "", "sort_cell_lines_datasets"]], "experiments": [[8, 4, 1, "", "architecture_exploration"], [8, 4, 1, "", "classify_target"], [8, 4, 1, "", "correlation_exploration"], [8, 4, 1, "", "cross_val_mrmr"], [8, 4, 1, "", "cross_validation_plot"], [8, 4, 1, "", "gcsi_gdsc_tests"], [8, 4, 1, "", "hyperparameter_exploration"], [8, 4, 1, "", "learn_experiment"], [8, 4, 1, "", "less_genes_exp"], [8, 4, 1, "", "mass_train"], [8, 4, 1, "", "method_validation"], [8, 4, 1, "", "model_inference"], [8, 4, 1, "", "mrmr_experiment"], [8, 4, 1, "", "overfit_exp"], [8, 4, 1, "", "plot_ci_delta"], [8, 4, 1, "", "test_ci"], [8, 4, 1, "", "test_clinical"], [8, 4, 1, "", "test_gcsi"], [8, 4, 1, "", "test_gdsc"], [8, 4, 1, "", "train"], [8, 4, 1, "", "train_test_split_plot"]], "visualization": [[10, 4, 1, "", "aac_noise_plots"], [10, 4, 1, "", "all_distributions_subplotnine"], [10, 4, 1, "", "all_distributions_subseaborn"], [10, 4, 1, "", "arch_heatmap"], [10, 4, 1, "", "arch_plots"], [10, 4, 1, "", "check_datasets"], [10, 4, 1, "", "correlation_plots"], [10, 4, 1, "", "learn_exp_plots"], [10, 4, 1, "", "less_genes_heatmap"], [10, 4, 1, "", "method_validation_plots"], [10, 4, 1, "", "model_inference_plots"], [10, 4, 1, "", "mrmr_plots"], [10, 4, 1, "", "obtain_distr"], [10, 4, 1, "", "plot_distribution"], [10, 4, 1, "", "plotnine_distribution"], [10, 4, 1, "", "seaborn_distribution"], [10, 4, 1, "", "show_all_distributions"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:method", "4": "py:function"}, "terms": {"": [12, 13, 15], "0": [4, 5, 6], "00_simple_train_test": 9, "01": [4, 5], "01_hparam_tun": 9, "02_results_after_tun": 9, "03_compar": 9, "1": [4, 5, 9, 12, 14], "10": 15, "12": [4, 5, 15], "128": [4, 5], "15": [4, 5], "18": 15, "2": [4, 5, 15], "256": [4, 5], "3": [14, 15], "30": [4, 5], "35": [4, 5], "3905461": 15, "4": [4, 5, 12], "420": [4, 5], "5": [4, 5, 15], "512": [4, 5], "5281": 15, "5787145": 15, "7826870": 15, "7829857": 15, "8": [4, 5], "A": [4, 5, 15], "Be": 15, "Being": 12, "By": [13, 15], "For": 15, "If": 13, "In": [12, 14], "It": 15, "No": 14, "On": 15, "Or": 15, "The": [4, 5, 12, 13, 15], "To": 14, "__getitem__": 6, "__len__": 6, "__version__": [4, 14], "_build_pair": 6, "_load_item": 6, "_load_respons": 6, "_validate_param": [4, 5], "aac": 15, "aac_noise_plot": 10, "abid": [13, 15], "about": 13, "abstract": 5, "abstractattr": 5, "abus": 12, "ac": 15, "accept": 12, "account": 12, "accuraci": 15, "across": 15, "act": 12, "action": 12, "ad": 15, "adapt": 12, "add": 13, "add_argument_group": 5, "add_ctrp_gen": 7, "addit": 13, "address": 12, "advanc": 12, "ag": 12, "agre": [13, 15], "align": 12, "all": [4, 5, 12, 13, 15], "all_distributions_subplotnin": 10, "all_distributions_subseaborn": 10, "alwai": 13, "an": [12, 15], "ani": [12, 13, 15], "anyth": 13, "appear": 12, "appli": [4, 5, 12, 15], "appoint": 12, "appreci": 13, "approach": 15, "appropri": [12, 13], "ar": [12, 13, 15], "arch": 8, "arch_heatmap": 10, "arch_plot": 10, "architectur": [6, 15], "architecture_explor": 8, "articl": 13, "assess": 15, "assess_dataset": 7, "associ": 15, "assumpt": 15, "attack": 12, "attent": 12, "auto": 9, "autoapi": 9, "avail": 15, "b": 13, "ban": 12, "base": [4, 5, 6], "basecinet": [4, 5], "baseestim": 5, "batch": [4, 5, 6], "batch_idx": 6, "batch_siz": [4, 5, 6, 8, 15], "batchnorm": [4, 5, 6], "becaus": 15, "befor": 13, "behavior": 12, "best": 12, "between": 15, "bhklab": [0, 1, 2, 3, 15], "bit": 13, "blog": 13, "bodi": 12, "bool": [4, 5], "boolean": [4, 5], "both": [12, 15], "branch": 13, "bugfix": 13, "build": 6, "ca": 15, "call": [4, 5, 14], "can": [13, 15], "cancer": 15, "cannot": 15, "care": 15, "ccle": 15, "cell": [6, 14, 15], "censu": 15, "chang": 13, "check": [6, 13, 15], "check_dataset": 10, "checkout": 13, "chosen": 15, "christoph": 15, "cinet": [0, 1, 2, 3, 9, 11, 13, 14], "circumst": 12, "clarifi": 12, "classify_target": [5, 8], "clinical_filter_gen": 7, "clinical_filter_pati": 7, "close": 15, "code": 15, "cohort": 8, "com": 15, "comment": 12, "commit": [12, 13], "common": [7, 15], "common_drug": 7, "commun": 12, "compar": 15, "complaint": 12, "complex": 15, "compos": 15, "concaten": 15, "concord": 15, "conduct": 15, "confidenti": 12, "config": [4, 5, 6], "configur": [4, 5, 6], "configure_optim": 6, "conform": 13, "connect": 6, "consid": 12, "construct": 12, "contact": 12, "contain": [4, 5, 9, 15], "contrast": 15, "contribut": 12, "contributor": 12, "cookiecutt": 15, "copi": 13, "correct": 12, "correlation_explor": 8, "correlation_plot": 10, "correspond": 6, "cosmic": 15, "could": 12, "count_paramet": 6, "coven": 12, "cpu": [4, 5, 15], "creat": [9, 12, 13, 15], "credit": 13, "critic": 12, "cross_val_mrmr": 8, "cross_valid": [5, 8], "cross_validation_plot": 8, "csv": [0, 3, 6, 15], "ctrp": 15, "current": 13, "data": [1, 2, 5, 6], "data_dir": 6, "data_manag": 9, "datafram": [5, 6], "dataload": 5, "dataset": [5, 6, 7, 15], "datatyp": 1, "deem": 12, "deep": 15, "deepcinet": [4, 5, 6, 15], "deepcinet_hparam_tun": 2, "defin": [12, 15], "deliv": 15, "delta": [4, 5, 6, 8, 15], "derogatori": 12, "detail": [12, 13], "detect": 15, "determin": [4, 5, 12], "develop": [13, 15], "devic": [4, 5, 15], "dict": [4, 5], "dictionari": [4, 5], "differ": [12, 15], "dimension": 15, "disabl": 12, "discrimin": 15, "distributon": 15, "do": 12, "doc": 13, "docstr": 13, "document": 9, "doe": 15, "done": [13, 15], "download": [13, 15], "driven": 13, "dropout": [4, 5, 6], "drug": [2, 6, 8, 10, 15], "drug_nam": 10, "dure": 15, "e": [12, 15], "each": 15, "easier": 13, "easili": 15, "ecinet": [4, 5, 15], "ecinet_hparam_tun": 2, "edit": 12, "eel": 15, "elasticnet": 15, "electron": 12, "elimin": 15, "empathi": 12, "encyclopedia": 15, "end": 15, "enhanc": 13, "enough": 13, "ensg00000088038": 15, "environ": 12, "epoch": 8, "essenti": 15, "ethnic": 12, "even": 13, "event": 12, "everi": [4, 5, 13], "everyon": 12, "exampl": 12, "exclus": 15, "execut": 15, "expect": 12, "experi": [9, 12, 15], "explain": 13, "explicit": 12, "express": [6, 12, 15], "extend": 6, "extra": 15, "extract": 15, "extract_cancer_gene_censu": 7, "f": 5, "face": 12, "fair": 12, "faith": 12, "fals": [5, 6], "featur": [6, 15], "feel": 13, "few": 15, "file": [0, 3, 15], "file_dir": [0, 1, 3], "file_list": [0, 1, 3], "final": 15, "find_common_cel": 7, "find_common_drug": 7, "find_common_gen": 7, "first": [5, 11], "fit": [4, 5, 15], "fix_genes_fil": 7, "focus": 12, "fold": [4, 5], "follow": [4, 5, 12, 15], "format": 13, "forward": 6, "foster": 12, "free": [12, 13], "from": [5, 6, 12, 15], "fulli": 6, "fullyconnect": 6, "fullyconnectedlinear": 6, "function": [4, 6, 13, 15], "further": 12, "gcsi": 15, "gcsi_gdsc_test": 8, "gdsc": 15, "gdsc_test_data": [0, 3], "gender": 12, "gene": [6, 7, 15], "gene_gdsc_rnaseq_erlotinib_respons": [0, 3], "gene_num": 6, "genea": 6, "geneb": 6, "genentech": 15, "gener": [9, 15], "generate_cancer_gene_census_fil": 7, "generate_ctrp_fil": 7, "genom": 15, "get_concordant_pair_list": 6, "get_dataload": 5, "get_model": [4, 5], "get_relationship_from_index": 6, "get_train": 5, "getconfig": [4, 5], "getpytorchmodel": 5, "git": 13, "github": [13, 15], "given": 13, "go": 15, "goal": 15, "good": 12, "gputwo": [0, 1, 2, 3], "gracefulli": 12, "greater": 6, "greatli": 13, "gridsearchcv": 15, "guidelin": 15, "hand": 15, "harass": 12, "harm": 12, "have": [12, 13], "help": 13, "here": 13, "home": [0, 1, 2, 3], "homepag": 12, "homoscedast": 15, "how": 13, "howev": 15, "http": 15, "hyper": 15, "hyperparam": [5, 6], "hyperparamet": 5, "hyperparameter_explor": 8, "i": [4, 5, 6, 12, 13, 15], "idea": 15, "ident": 12, "idx": 6, "imageri": 12, "implement": [6, 15], "import": [14, 15], "improv": 15, "inappropri": 12, "incid": 12, "includ": [12, 13, 15], "inclus": 12, "index": [6, 15], "indic": 6, "individu": 12, "inform": 12, "initi": [4, 5, 15], "input": [5, 6], "instal": 13, "instanc": 12, "insult": 12, "integ": [4, 5], "interest": [12, 15], "interfac": [4, 9, 15], "intersect": 15, "intuit": 15, "investig": 12, "is_train": 6, "issu": [12, 13], "iter": 6, "its": [12, 13, 15], "j": 6, "keep": 13, "kevin": 15, "kevint": [0, 1, 2, 3], "kwarg": [4, 5], "label": 6, "languag": 12, "larg": 15, "last": 14, "lastli": 15, "layer": [4, 5], "layers_s": 6, "leadership": 12, "learn": 15, "learn_exp_plot": 10, "learn_experi": 8, "learning_r": [4, 5], "less_genes_exp": 8, "less_genes_heatmap": 10, "level": 12, "lightn": [5, 6], "lightningmodul": 6, "like": 15, "line": [6, 14, 15], "linear": [6, 15], "list": [5, 15], "littl": 13, "load": 6, "local": 13, "log_model_paramet": 6, "look": 13, "loss": 15, "mai": 12, "mail": 12, "maintain": 12, "make": [12, 13, 15], "mass_train": 8, "max_epoch": [4, 5], "maxim": 15, "meant": 15, "media": 12, "meet": 13, "member": 12, "method": 6, "method_valid": 8, "method_validation_plot": 10, "might": 13, "minimum": 15, "mit": 15, "model": [0, 4, 5, 9, 15], "model_infer": 8, "model_inference_plot": 10, "modeldc": 3, "modelec": 3, "modelen": 3, "modelln": 3, "modelpath": [4, 5], "modul": 14, "modulenotfounderror": 14, "momentum": [4, 5], "monoton": 15, "most": 14, "mrmr_experi": 8, "mrmr_plot": 10, "must": [4, 5], "n_job": 15, "name": [1, 5, 13, 14, 15], "narrow": 13, "nation": 12, "net": [4, 5], "network": [4, 5, 6, 15], "neural": [4, 5, 15], "never": 13, "nn": 6, "nnhiddenlay": [4, 5], "non": 15, "none": [5, 6], "normal": [4, 5], "note": [13, 15], "num_work": [4, 5], "object": [4, 5, 6, 15], "oblig": 12, "obtain": 15, "obtain_ctrp_drug": 7, "obtain_distr": 10, "obtent": 15, "offens": 12, "offici": [12, 13], "offlin": 12, "one": [5, 15], "ones": 15, "onlin": 12, "open": [12, 13], "oper": 13, "optim": 6, "orcestra": 15, "orcestradatasetcur": 15, "orient": 12, "other": [12, 15], "otherwis": 12, "our": 6, "out": 15, "output": [5, 6], "overfit_exp": 8, "page": 9, "pair": [6, 15], "pair_idx": 6, "panda": 5, "param": 6, "param_grid": [1, 15], "paramet": [4, 5, 15], "parametr": 15, "part": 13, "particip": 12, "pass": [6, 13], "per": 15, "perform": 15, "perman": 12, "permiss": 12, "person": 12, "physic": 12, "pip3": 15, "pkg": 15, "pleas": [13, 15], "plot_ci_delta": 8, "plot_distribut": 10, "plotnine_distribut": 10, "poetri": 13, "polici": 12, "polit": 12, "portal": 15, "posit": 12, "possibl": 13, "post": [12, 13], "pre_built": 6, "predict": [5, 15], "print": 14, "privat": [4, 5, 12], "profession": 12, "project": [12, 13, 14, 15], "propos": 13, "provid": 6, "pset": 15, "public": [12, 15], "publish": 12, "py": 15, "python": 13, "pytorch": [4, 5, 6, 15], "pytorch_lightn": 6, "r": 15, "race": 12, "random_pair": 5, "rank": [5, 15], "re": 13, "readi": 13, "real": 15, "reason": 12, "recent": 14, "refit": 15, "regard": 12, "regardless": 12, "regress": 15, "regular": 15, "reject": 12, "rel": 15, "relat": 15, "releas": [11, 13, 15], "relev": [4, 5], "religion": 12, "rememb": 13, "remov": 12, "repercuss": 12, "repons": 6, "report": 12, "repres": 12, "represent": 12, "reproduc": 13, "requir": 13, "resourc": 15, "respect": 12, "respond": 12, "respons": [6, 15], "return": [4, 5, 6], "review": 12, "right": 12, "rna": 15, "sampl": 15, "sanger": 15, "save_dir": 1, "sc_gamma": [4, 5], "sc_mileston": [4, 5], "schedul": 6, "scikit": 15, "scope": 13, "score": [5, 15], "screen": 15, "seaborn_distribut": 10, "second": [5, 15], "seed": [4, 5], "select": 15, "sensit": 15, "separ": [12, 15], "seq": 15, "set": [6, 12, 13, 15], "setup": 13, "sexual": 12, "shot": 15, "should": [4, 5, 13], "show": 12, "show_all_distribut": 10, "siames": [4, 5, 15], "similar": 13, "size": 12, "sklearn": 5, "smaller": 15, "social": 12, "sort_cell_lines_dataset": 7, "space": [12, 15], "specif": 12, "sphinx": 9, "standard": 15, "static": 6, "statist": 15, "step": [13, 15], "studi": 15, "support": 13, "sure": 15, "syntax": 15, "system": 13, "tabatabaei": 15, "tag": 13, "take": [5, 12], "target": 15, "team": 12, "templat": 15, "temporari": 12, "temporarili": 12, "tensor": 5, "term": [13, 15], "test": [5, 13, 15], "test_ci": 8, "test_clin": 8, "test_data": [0, 3], "test_df": [0, 3], "test_df_i": 3, "test_df_x": 3, "test_directori": 2, "test_epoch_end": 6, "test_fil": [0, 3], "test_gcsi": 8, "test_gdsc": 8, "test_item": 6, "test_step": 6, "than": 6, "thei": [12, 13], "therapeut": 15, "thi": [4, 5, 6, 9, 12, 13, 15], "thing": 15, "those": 15, "threaten": 12, "three": 15, "through": 13, "time": [4, 5], "togeth": 15, "too": 15, "torch": [5, 6], "toward": 12, "traceback": 14, "train": [5, 6, 8, 15], "train_data": [0, 1, 2, 3], "train_df": [0, 3], "train_dir": 2, "train_item": 6, "train_test_split_plot": 8, "trainer": 5, "training_epoch_end": 6, "training_step": 6, "transfer": 15, "treat": 15, "troll": 12, "troubleshoot": 13, "true": [4, 5, 15], "tupl": [4, 5], "two": [5, 15], "type": [4, 5], "uk": 15, "unaccept": 12, "under": 15, "unwelcom": 12, "up": 13, "updat": 13, "us": [12, 13, 14, 15], "use_fold": [4, 5], "util": 6, "v2": 15, "valid": [4, 5, 6, 15], "validation_epoch_end": 6, "validation_step": 6, "valu": [5, 15], "variabl": [4, 5, 6], "verbos": 15, "version": [8, 12, 13, 15], "via": 12, "viewpoint": 12, "visual": 9, "volunt": 13, "wa": 15, "wai": 12, "want": 13, "we": 12, "web": 13, "weight": 15, "weight_decai": [4, 5], "welcom": [12, 13], "well": [6, 15], "were": 15, "what": [12, 15], "when": [12, 13], "where": 15, "which": [6, 12, 15], "while": 15, "who": 12, "whoever": 13, "wiki": 12, "within": 12, "without": 12, "work": 13, "world": 15, "would": 13, "www": 15, "x": [0, 3, 5, 6, 15], "y": [0, 3, 5, 8, 15], "you": [13, 15], "your": 13, "zenodo": 15}, "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">00_simple_train_test</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">01_hparam_tuning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">02_results_after_tuning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">03_compare</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cinet</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cinet.interfaces</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cinet.models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">data_managing</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">experiments</span></code>", "API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">visualization</span></code>", "Changelog", "Code of Conduct", "Contributing", "Example usage", "cinet"], "titleterms": {"0": 11, "00_simple_train_test": 0, "01_hparam_tun": 1, "02_results_after_tun": 2, "03_compar": 3, "06": 11, "08": 11, "1": 11, "10": 11, "11": 11, "12": 11, "13": 11, "14": 11, "15": 11, "16": 11, "2": 11, "2022": 11, "24": 11, "25": 11, "26": 11, "3": 11, "4": 11, "5": 11, "6": 11, "7": 11, "8": 11, "9": 11, "api": 9, "attribut": [4, 12], "bug": 13, "changelog": 11, "cinet": [4, 5, 6, 15], "class": [4, 5, 6], "code": [12, 13], "conduct": [12, 13], "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10], "contribut": [13, 15], "credit": 15, "curat": 15, "data": 15, "data_manag": 7, "document": 13, "enforc": 12, "exampl": 14, "experi": 8, "featur": 13, "feedback": 13, "fix": 13, "function": [5, 7, 8, 10], "get": 13, "guidelin": 13, "implement": 13, "instal": 15, "interfac": 5, "licens": 15, "model": 6, "modul": [0, 1, 2, 3, 5, 6, 7, 8, 10], "our": 12, "packag": 4, "pledg": 12, "process": 15, "pull": 13, "refer": 9, "report": 13, "request": 13, "respons": 12, "scope": 12, "sourc": 15, "standard": 12, "start": 13, "submit": 13, "submodul": 4, "type": 13, "usag": [14, 15], "v0": 11, "visual": 10, "write": 13}})